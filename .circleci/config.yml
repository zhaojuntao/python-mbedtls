# Python CircleCI 2.0 configuration file
# vi: et:ts=2:sw=2
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/python-mbedtls
    steps:
      - checkout
      - run:
          name: install pyenv
          command: |
            git clone https://github.com/pyenv/pyenv.git $HOME/python-mbedtls/.pyenv
            cat << 'EOF' >> $BASH_ENV
            export PYENV_ROOT="$HOME/python-mbedtls/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            EOF

      - restore_cache:
          keys:
            - py27-2.7.14
      - run:
          name: install python 2.7.14
          command: |
            if [ ! -d ".pyenv/versions/2.7.14" ]; then
              eval "$(pyenv init -)"
              pyenv install 2.7.14
            fi
      - save_cache:
          key: py27-2.7.14
          paths:
            - .pyenv/versions/2.7.14

      - restore_cache:
          keys:
            - py34-3.4.8
      - run:
          name: install python 3.4.8
          command: |
            if [ ! -d ".pyenv/versions/3.4.8" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.4.8
            fi
      - save_cache:
          key: py34-3.4.8
          paths:
            - .pyenv/versions/3.4.8

      - restore_cache:
          keys:
            - py35-3.5.5
      - run:
          name: install python 3.5.5
          command: |
            if [ ! -d ".pyenv/versions/3.5.5" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.5.5
            fi
      - save_cache:
          key: py35-3.5.5
          paths:
            - .pyenv/versions/3.5.5

      - restore_cache:
          keys:
            - py36-3.6.4
      - run:
          name: install python 3.6.4
          command: |
            if [ ! -d ".pyenv/versions/3.6.4" ]; then
              eval "$(pyenv init -)"
              pyenv install 3.6.4
            fi
      - save_cache:
          key: py36-3.6.4
          paths:
            - .pyenv/versions/3.6.4

      - run:
          name: setup environment
          command: |
            cat << 'EOF' >> $BASH_ENV
            export VERSION=2.4.2
            export DESTDIR=$HOME/lib/mbedtls-$VERSION
            export LIBRARY_PATH=$DESTDIR/lib
            export LD_LIBRARY_PATH=$DESTDIR/lib
            export C_INCLUDE_PATH=$DESTDIR/include
            EOF
      - run:
          name: install mbedtls
          command: |
            echo 'deb http://deb.debian.org/debian jessie-backports main' |\
              sudo tee /etc/apt/sources.list.d/backports.list
            sudo apt-get update
            sudo apt-get install libmbedtls-dev

      - restore_cache:
          keys:
            - py-deps-2.7-{{ checksum "requirements-tests.txt" }}
      - run:
          name: install environment
          command: |
            sudo apt-get install python-virtualenv
            python -m virtualenv venv
            . venv/bin/activate
            pip install -r requirements-tests.txt
      - save_cache:
          key: py-deps-2.7-{{ checksum "requirements-tests.txt" }}
          paths:
            - venv

      - run:
          name: run tests
          command: |
            eval "$(pyenv init -)"
            pyenv shell 2.7.14 3.4.8 3.5.5 3.6.4
            . venv/bin/activate
            detox
      - run:
          name: coveralls
          command: |
            . venv/bin/activate
            coveralls

      - deploy:
          name: Publish to Pypi
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              echo "[pypi]" > $HOME/.pypirc
              echo "username = Synss" >> $HOME/.pypirc
              echo "password = $PYPI_PASSWORD" >> $HOME/.pypirc
              . venv/bin/activate
              python setup.py sdist
              twine upload dist/*
            fi

      - store_artifacts:
          path: test-reports
          destination: test-reports
